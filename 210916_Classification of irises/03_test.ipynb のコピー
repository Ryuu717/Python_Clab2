{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"03_test.ipynb のコピー","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNQ5jBQlZr9JmFrN1iFY9SV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"74NHupvpaiT5"},"source":["#手順\n","1. データの読み込み\n","2. データの前処理（標準化、one-hot表現）\n","3. 学習とテスト（検証）サンプルに分ける\n","4. モデル作成(Sequential)\n","5. 学習\n","6. グラフで誤差と精度確認\n","7. テストデータでの誤差と精度確認"]},{"cell_type":"code","metadata":{"id":"ePrzmoQ5Dou6"},"source":["#基本ライブラリ\n","#import numpy as np\n","#import matplotlib.pyplot as plt\n","\n","#機械学習関連のライブラリ\n","#from sklearn import datasets\n","#from sklearn import preprocessing\n","#from sklearn.model_selection import train_test_split\n","\n","#深層学習関連のライブラリ\n","#from keras.utils import np_utils\n","#from keras.models import Sequential\n","#from keras.layers import Dense, Activation"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"J1JQTjD31Oy9"},"source":[""]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-1RARNWIAUYA","executionInfo":{"status":"ok","timestamp":1631761913126,"user_tz":-540,"elapsed":1371,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"110a2e26-d759-4dab-ee78-81da3f8b00cb"},"source":["import numpy as np\n","from sklearn import datasets\n","\n","iris = datasets.load_iris()\n","print(iris.data[:10])  # データを10個表示\n","print(iris.target[:10])  # ラベルを10個表示\n","print(iris.data.shape)  # データの形状を表示"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["[[5.1 3.5 1.4 0.2]\n"," [4.9 3.  1.4 0.2]\n"," [4.7 3.2 1.3 0.2]\n"," [4.6 3.1 1.5 0.2]\n"," [5.  3.6 1.4 0.2]\n"," [5.4 3.9 1.7 0.4]\n"," [4.6 3.4 1.4 0.3]\n"," [5.  3.4 1.5 0.2]\n"," [4.4 2.9 1.4 0.2]\n"," [4.9 3.1 1.5 0.1]]\n","[0 0 0 0 0 0 0 0 0 0]\n","(150, 4)\n"]}]},{"cell_type":"code","metadata":{"id":"fwL3ZLLUIseU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631761914911,"user_tz":-540,"elapsed":219,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"25086fbc-e883-4e91-d59a-a9a0fff3c331"},"source":["iris"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'DESCR': '.. _iris_dataset:\\n\\nIris plants dataset\\n--------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 150 (50 in each of three classes)\\n    :Number of Attributes: 4 numeric, predictive attributes and the class\\n    :Attribute Information:\\n        - sepal length in cm\\n        - sepal width in cm\\n        - petal length in cm\\n        - petal width in cm\\n        - class:\\n                - Iris-Setosa\\n                - Iris-Versicolour\\n                - Iris-Virginica\\n                \\n    :Summary Statistics:\\n\\n    ============== ==== ==== ======= ===== ====================\\n                    Min  Max   Mean    SD   Class Correlation\\n    ============== ==== ==== ======= ===== ====================\\n    sepal length:   4.3  7.9   5.84   0.83    0.7826\\n    sepal width:    2.0  4.4   3.05   0.43   -0.4194\\n    petal length:   1.0  6.9   3.76   1.76    0.9490  (high!)\\n    petal width:    0.1  2.5   1.20   0.76    0.9565  (high!)\\n    ============== ==== ==== ======= ===== ====================\\n\\n    :Missing Attribute Values: None\\n    :Class Distribution: 33.3% for each of 3 classes.\\n    :Creator: R.A. Fisher\\n    :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)\\n    :Date: July, 1988\\n\\nThe famous Iris database, first used by Sir R.A. Fisher. The dataset is taken\\nfrom Fisher\\'s paper. Note that it\\'s the same as in R, but not as in the UCI\\nMachine Learning Repository, which has two wrong data points.\\n\\nThis is perhaps the best known database to be found in the\\npattern recognition literature.  Fisher\\'s paper is a classic in the field and\\nis referenced frequently to this day.  (See Duda & Hart, for example.)  The\\ndata set contains 3 classes of 50 instances each, where each class refers to a\\ntype of iris plant.  One class is linearly separable from the other 2; the\\nlatter are NOT linearly separable from each other.\\n\\n.. topic:: References\\n\\n   - Fisher, R.A. \"The use of multiple measurements in taxonomic problems\"\\n     Annual Eugenics, 7, Part II, 179-188 (1936); also in \"Contributions to\\n     Mathematical Statistics\" (John Wiley, NY, 1950).\\n   - Duda, R.O., & Hart, P.E. (1973) Pattern Classification and Scene Analysis.\\n     (Q327.D83) John Wiley & Sons.  ISBN 0-471-22361-1.  See page 218.\\n   - Dasarathy, B.V. (1980) \"Nosing Around the Neighborhood: A New System\\n     Structure and Classification Rule for Recognition in Partially Exposed\\n     Environments\".  IEEE Transactions on Pattern Analysis and Machine\\n     Intelligence, Vol. PAMI-2, No. 1, 67-71.\\n   - Gates, G.W. (1972) \"The Reduced Nearest Neighbor Rule\".  IEEE Transactions\\n     on Information Theory, May 1972, 431-433.\\n   - See also: 1988 MLC Proceedings, 54-64.  Cheeseman et al\"s AUTOCLASS II\\n     conceptual clustering system finds 3 classes in the data.\\n   - Many, many more ...',\n"," 'data': array([[5.1, 3.5, 1.4, 0.2],\n","        [4.9, 3. , 1.4, 0.2],\n","        [4.7, 3.2, 1.3, 0.2],\n","        [4.6, 3.1, 1.5, 0.2],\n","        [5. , 3.6, 1.4, 0.2],\n","        [5.4, 3.9, 1.7, 0.4],\n","        [4.6, 3.4, 1.4, 0.3],\n","        [5. , 3.4, 1.5, 0.2],\n","        [4.4, 2.9, 1.4, 0.2],\n","        [4.9, 3.1, 1.5, 0.1],\n","        [5.4, 3.7, 1.5, 0.2],\n","        [4.8, 3.4, 1.6, 0.2],\n","        [4.8, 3. , 1.4, 0.1],\n","        [4.3, 3. , 1.1, 0.1],\n","        [5.8, 4. , 1.2, 0.2],\n","        [5.7, 4.4, 1.5, 0.4],\n","        [5.4, 3.9, 1.3, 0.4],\n","        [5.1, 3.5, 1.4, 0.3],\n","        [5.7, 3.8, 1.7, 0.3],\n","        [5.1, 3.8, 1.5, 0.3],\n","        [5.4, 3.4, 1.7, 0.2],\n","        [5.1, 3.7, 1.5, 0.4],\n","        [4.6, 3.6, 1. , 0.2],\n","        [5.1, 3.3, 1.7, 0.5],\n","        [4.8, 3.4, 1.9, 0.2],\n","        [5. , 3. , 1.6, 0.2],\n","        [5. , 3.4, 1.6, 0.4],\n","        [5.2, 3.5, 1.5, 0.2],\n","        [5.2, 3.4, 1.4, 0.2],\n","        [4.7, 3.2, 1.6, 0.2],\n","        [4.8, 3.1, 1.6, 0.2],\n","        [5.4, 3.4, 1.5, 0.4],\n","        [5.2, 4.1, 1.5, 0.1],\n","        [5.5, 4.2, 1.4, 0.2],\n","        [4.9, 3.1, 1.5, 0.2],\n","        [5. , 3.2, 1.2, 0.2],\n","        [5.5, 3.5, 1.3, 0.2],\n","        [4.9, 3.6, 1.4, 0.1],\n","        [4.4, 3. , 1.3, 0.2],\n","        [5.1, 3.4, 1.5, 0.2],\n","        [5. , 3.5, 1.3, 0.3],\n","        [4.5, 2.3, 1.3, 0.3],\n","        [4.4, 3.2, 1.3, 0.2],\n","        [5. , 3.5, 1.6, 0.6],\n","        [5.1, 3.8, 1.9, 0.4],\n","        [4.8, 3. , 1.4, 0.3],\n","        [5.1, 3.8, 1.6, 0.2],\n","        [4.6, 3.2, 1.4, 0.2],\n","        [5.3, 3.7, 1.5, 0.2],\n","        [5. , 3.3, 1.4, 0.2],\n","        [7. , 3.2, 4.7, 1.4],\n","        [6.4, 3.2, 4.5, 1.5],\n","        [6.9, 3.1, 4.9, 1.5],\n","        [5.5, 2.3, 4. , 1.3],\n","        [6.5, 2.8, 4.6, 1.5],\n","        [5.7, 2.8, 4.5, 1.3],\n","        [6.3, 3.3, 4.7, 1.6],\n","        [4.9, 2.4, 3.3, 1. ],\n","        [6.6, 2.9, 4.6, 1.3],\n","        [5.2, 2.7, 3.9, 1.4],\n","        [5. , 2. , 3.5, 1. ],\n","        [5.9, 3. , 4.2, 1.5],\n","        [6. , 2.2, 4. , 1. ],\n","        [6.1, 2.9, 4.7, 1.4],\n","        [5.6, 2.9, 3.6, 1.3],\n","        [6.7, 3.1, 4.4, 1.4],\n","        [5.6, 3. , 4.5, 1.5],\n","        [5.8, 2.7, 4.1, 1. ],\n","        [6.2, 2.2, 4.5, 1.5],\n","        [5.6, 2.5, 3.9, 1.1],\n","        [5.9, 3.2, 4.8, 1.8],\n","        [6.1, 2.8, 4. , 1.3],\n","        [6.3, 2.5, 4.9, 1.5],\n","        [6.1, 2.8, 4.7, 1.2],\n","        [6.4, 2.9, 4.3, 1.3],\n","        [6.6, 3. , 4.4, 1.4],\n","        [6.8, 2.8, 4.8, 1.4],\n","        [6.7, 3. , 5. , 1.7],\n","        [6. , 2.9, 4.5, 1.5],\n","        [5.7, 2.6, 3.5, 1. ],\n","        [5.5, 2.4, 3.8, 1.1],\n","        [5.5, 2.4, 3.7, 1. ],\n","        [5.8, 2.7, 3.9, 1.2],\n","        [6. , 2.7, 5.1, 1.6],\n","        [5.4, 3. , 4.5, 1.5],\n","        [6. , 3.4, 4.5, 1.6],\n","        [6.7, 3.1, 4.7, 1.5],\n","        [6.3, 2.3, 4.4, 1.3],\n","        [5.6, 3. , 4.1, 1.3],\n","        [5.5, 2.5, 4. , 1.3],\n","        [5.5, 2.6, 4.4, 1.2],\n","        [6.1, 3. , 4.6, 1.4],\n","        [5.8, 2.6, 4. , 1.2],\n","        [5. , 2.3, 3.3, 1. ],\n","        [5.6, 2.7, 4.2, 1.3],\n","        [5.7, 3. , 4.2, 1.2],\n","        [5.7, 2.9, 4.2, 1.3],\n","        [6.2, 2.9, 4.3, 1.3],\n","        [5.1, 2.5, 3. , 1.1],\n","        [5.7, 2.8, 4.1, 1.3],\n","        [6.3, 3.3, 6. , 2.5],\n","        [5.8, 2.7, 5.1, 1.9],\n","        [7.1, 3. , 5.9, 2.1],\n","        [6.3, 2.9, 5.6, 1.8],\n","        [6.5, 3. , 5.8, 2.2],\n","        [7.6, 3. , 6.6, 2.1],\n","        [4.9, 2.5, 4.5, 1.7],\n","        [7.3, 2.9, 6.3, 1.8],\n","        [6.7, 2.5, 5.8, 1.8],\n","        [7.2, 3.6, 6.1, 2.5],\n","        [6.5, 3.2, 5.1, 2. ],\n","        [6.4, 2.7, 5.3, 1.9],\n","        [6.8, 3. , 5.5, 2.1],\n","        [5.7, 2.5, 5. , 2. ],\n","        [5.8, 2.8, 5.1, 2.4],\n","        [6.4, 3.2, 5.3, 2.3],\n","        [6.5, 3. , 5.5, 1.8],\n","        [7.7, 3.8, 6.7, 2.2],\n","        [7.7, 2.6, 6.9, 2.3],\n","        [6. , 2.2, 5. , 1.5],\n","        [6.9, 3.2, 5.7, 2.3],\n","        [5.6, 2.8, 4.9, 2. ],\n","        [7.7, 2.8, 6.7, 2. ],\n","        [6.3, 2.7, 4.9, 1.8],\n","        [6.7, 3.3, 5.7, 2.1],\n","        [7.2, 3.2, 6. , 1.8],\n","        [6.2, 2.8, 4.8, 1.8],\n","        [6.1, 3. , 4.9, 1.8],\n","        [6.4, 2.8, 5.6, 2.1],\n","        [7.2, 3. , 5.8, 1.6],\n","        [7.4, 2.8, 6.1, 1.9],\n","        [7.9, 3.8, 6.4, 2. ],\n","        [6.4, 2.8, 5.6, 2.2],\n","        [6.3, 2.8, 5.1, 1.5],\n","        [6.1, 2.6, 5.6, 1.4],\n","        [7.7, 3. , 6.1, 2.3],\n","        [6.3, 3.4, 5.6, 2.4],\n","        [6.4, 3.1, 5.5, 1.8],\n","        [6. , 3. , 4.8, 1.8],\n","        [6.9, 3.1, 5.4, 2.1],\n","        [6.7, 3.1, 5.6, 2.4],\n","        [6.9, 3.1, 5.1, 2.3],\n","        [5.8, 2.7, 5.1, 1.9],\n","        [6.8, 3.2, 5.9, 2.3],\n","        [6.7, 3.3, 5.7, 2.5],\n","        [6.7, 3. , 5.2, 2.3],\n","        [6.3, 2.5, 5. , 1.9],\n","        [6.5, 3. , 5.2, 2. ],\n","        [6.2, 3.4, 5.4, 2.3],\n","        [5.9, 3. , 5.1, 1.8]]),\n"," 'feature_names': ['sepal length (cm)',\n","  'sepal width (cm)',\n","  'petal length (cm)',\n","  'petal width (cm)'],\n"," 'filename': '/usr/local/lib/python3.7/dist-packages/sklearn/datasets/data/iris.csv',\n"," 'target': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","        0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n","        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]),\n"," 'target_names': array(['setosa', 'versicolor', 'virginica'], dtype='<U10')}"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UUnpXZNIAaiE","executionInfo":{"status":"ok","timestamp":1631761922797,"user_tz":-540,"elapsed":2116,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"6f02f8bf-1e16-477e-af58-c9b46a3c5221"},"source":["from sklearn import preprocessing\n","from keras.utils import np_utils\n","\n","scaler = preprocessing.StandardScaler()  # 標準化のためのスケーラー\n","scaler.fit(iris.data)  # パラメータの計算\n","x = scaler.transform(iris.data)  # データの変換\n","print(x[:10])\n","\n","t = np_utils.to_categorical(iris.target)  # ラベルをone-hot表現に変換\n","print(t[:10])"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-0.90068117  1.01900435 -1.34022653 -1.3154443 ]\n"," [-1.14301691 -0.13197948 -1.34022653 -1.3154443 ]\n"," [-1.38535265  0.32841405 -1.39706395 -1.3154443 ]\n"," [-1.50652052  0.09821729 -1.2833891  -1.3154443 ]\n"," [-1.02184904  1.24920112 -1.34022653 -1.3154443 ]\n"," [-0.53717756  1.93979142 -1.16971425 -1.05217993]\n"," [-1.50652052  0.78880759 -1.34022653 -1.18381211]\n"," [-1.02184904  0.78880759 -1.2833891  -1.3154443 ]\n"," [-1.74885626 -0.36217625 -1.34022653 -1.3154443 ]\n"," [-1.14301691  0.09821729 -1.2833891  -1.44707648]]\n","[[1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":532},"id":"xn91IDHLLlgw","executionInfo":{"status":"error","timestamp":1631761931238,"user_tz":-540,"elapsed":6566,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"6951dd25-b984-46fd-9dee-7e438c5925e8"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":5,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    728\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 729\u001b[0;31m                 \u001b[0mident\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdin_socket\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    730\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/jupyter_client/session.py\u001b[0m in \u001b[0;36mrecv\u001b[0;34m(self, socket, mode, content, copy)\u001b[0m\n\u001b[1;32m    802\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 803\u001b[0;31m             \u001b[0mmsg_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msocket\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_multipart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    804\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mzmq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mZMQError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36mrecv_multipart\u001b[0;34m(self, flags, copy, track)\u001b[0m\n\u001b[1;32m    618\u001b[0m         \"\"\"\n\u001b[0;32m--> 619\u001b[0;31m         \u001b[0mparts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    620\u001b[0m         \u001b[0;31m# have first part already, only loop while more to receive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._recv_copy\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: ","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-d5df0069828e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms, use_metadata_server)\u001b[0m\n\u001b[1;32m    112\u001b[0m       \u001b[0mtimeout_ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtimeout_ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    113\u001b[0m       \u001b[0muse_metadata_server\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_metadata_server\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 114\u001b[0;31m       ephemeral=ephemeral)\n\u001b[0m\u001b[1;32m    115\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    116\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36m_mount\u001b[0;34m(mountpoint, force_remount, timeout_ms, use_metadata_server, ephemeral)\u001b[0m\n\u001b[1;32m    291\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0m_output\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muse_tags\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'dfs-auth-dance'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    292\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfifo\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'w'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfifo_file\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 293\u001b[0;31m           \u001b[0mfifo_file\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mget_code\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mauth_prompt\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'\\n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    294\u001b[0m       \u001b[0mwrote_to_fifo\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    295\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mcase\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    702\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    703\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 704\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    705\u001b[0m         )\n\u001b[1;32m    706\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    732\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    733\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 734\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    735\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    736\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eWuxrz8zAjCW","executionInfo":{"status":"ok","timestamp":1631761934999,"user_tz":-540,"elapsed":203,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"2831874c-507a-4005-dc35-cc383ac14476"},"source":["from sklearn.model_selection import train_test_split\n","\n","# x_train: 訓練用の入力データ\n","# x_test: テスト用の入力データ\n","# t_train: 訓練用の正解データ\n","# t_test: テスト用の正解データ\n","# train_size=0.75: 75%が訓練用、25%がテスト用\n","x_train, x_test, t_train, t_test = train_test_split(x, t, train_size=0.75)\n","print(x_train.shape)\n","print(x_test.shape)"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["(112, 4)\n","(38, 4)\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UaSr6G22A-KY","executionInfo":{"status":"ok","timestamp":1631761944455,"user_tz":-540,"elapsed":5698,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"fb78bc93-46eb-4d05-bbd9-18ba35753415"},"source":["from keras.models import Sequential\n","from keras.layers import Dense, Activation\n","\n","model = Sequential()\n","model.add(Dense(32, input_dim=4)) # 4つの特徴が入力なので、入力層のニューロン数は4、中間層のニューロン数は32\n","model.add(Activation('relu')) # 活性化関数（ReLU）を追加\n","model.add(Dense(32)) # ニューロン数32の全結合層を追加\n","model.add(Activation('relu')) # 活性化関数（ReLU）を追加\n","model.add(Dense(3)) # 3つに分類するので、出力層のニューロン数は3\n","model.add(Activation('softmax')) # 3つ以上の分類にはソフトマックス関数を使用\n","model.compile(optimizer='sgd',loss='categorical_crossentropy',metrics=['accuracy']) # モデルのコンパイル\n","\n","print(model.summary())"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense (Dense)                (None, 32)                160       \n","_________________________________________________________________\n","activation (Activation)      (None, 32)                0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 32)                1056      \n","_________________________________________________________________\n","activation_1 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 3)                 99        \n","_________________________________________________________________\n","activation_2 (Activation)    (None, 3)                 0         \n","=================================================================\n","Total params: 1,315\n","Trainable params: 1,315\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hzicJ-bOBnnj","executionInfo":{"status":"ok","timestamp":1631761953057,"user_tz":-540,"elapsed":5995,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"424f8596-0fce-4b8b-8b5f-3eb138f92e8f"},"source":["history = model.fit(x_train, t_train, epochs=30, batch_size=8)"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","14/14 [==============================] - 3s 3ms/step - loss: 1.0258 - accuracy: 0.3929\n","Epoch 2/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.9526 - accuracy: 0.4821\n","Epoch 3/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.8881 - accuracy: 0.6607\n","Epoch 4/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.8345 - accuracy: 0.6786\n","Epoch 5/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.7884 - accuracy: 0.6875\n","Epoch 6/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.7500 - accuracy: 0.7232\n","Epoch 7/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.7155 - accuracy: 0.7768\n","Epoch 8/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.6825 - accuracy: 0.8214\n","Epoch 9/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.6522 - accuracy: 0.8304\n","Epoch 10/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.6222 - accuracy: 0.8571\n","Epoch 11/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.5939 - accuracy: 0.8661\n","Epoch 12/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.5673 - accuracy: 0.8661\n","Epoch 13/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.5411 - accuracy: 0.8661\n","Epoch 14/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.5171 - accuracy: 0.8571\n","Epoch 15/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.4951 - accuracy: 0.8839\n","Epoch 16/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.4742 - accuracy: 0.8839\n","Epoch 17/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.4551 - accuracy: 0.8929\n","Epoch 18/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.4374 - accuracy: 0.8929\n","Epoch 19/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.4210 - accuracy: 0.8929\n","Epoch 20/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.4060 - accuracy: 0.8929\n","Epoch 21/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3920 - accuracy: 0.9107\n","Epoch 22/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3787 - accuracy: 0.9107\n","Epoch 23/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3668 - accuracy: 0.9107\n","Epoch 24/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3559 - accuracy: 0.9107\n","Epoch 25/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3458 - accuracy: 0.9107\n","Epoch 26/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3349 - accuracy: 0.9286\n","Epoch 27/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3256 - accuracy: 0.9286\n","Epoch 28/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3171 - accuracy: 0.9286\n","Epoch 29/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3090 - accuracy: 0.9375\n","Epoch 30/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3006 - accuracy: 0.9375\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"_nqzgVeiBtyW","executionInfo":{"status":"ok","timestamp":1631761953564,"user_tz":-540,"elapsed":511,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"65a984ac-2763-4835-dc34-e439fc4c103c"},"source":["import matplotlib.pyplot as plt\n","\n","hist_loss = history.history['loss']  # 訓練用データの誤差\n","hist_acc = history.history['accuracy']  # 検証用データの誤差\n","\n","plt.plot(np.arange(len(hist_loss)), hist_loss, label='loss')\n","plt.plot(np.arange(len(hist_acc)), hist_acc, label='accuracy')\n","plt.legend()\n","plt.show()"],"execution_count":9,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tAQU0kk9C_JB","executionInfo":{"status":"ok","timestamp":1631761959109,"user_tz":-540,"elapsed":523,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"d753fda2-a47e-4340-e6ed-2929614bb621"},"source":["loss, accuracy = model.evaluate(x_test, t_test)\n","print(loss, accuracy)"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["2/2 [==============================] - 0s 9ms/step - loss: 0.3538 - accuracy: 0.8158\n","0.3537771701812744 0.8157894611358643\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SE2PeyWuDbfl","executionInfo":{"status":"ok","timestamp":1631761966090,"user_tz":-540,"elapsed":200,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"3b4fd00b-5b49-4324-9557-b6f063b5987f"},"source":["model.predict(x_test)"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[2.8768340e-02, 2.5703654e-01, 7.1419513e-01],\n","       [9.0072346e-01, 4.8649967e-02, 5.0626598e-02],\n","       [9.5538062e-01, 2.0107793e-02, 2.4511602e-02],\n","       [6.4920507e-02, 3.4062544e-01, 5.9445405e-01],\n","       [9.2389643e-01, 3.8469817e-02, 3.7633836e-02],\n","       [4.7671492e-03, 7.2375983e-02, 9.2285681e-01],\n","       [9.2254686e-01, 3.8070470e-02, 3.9382715e-02],\n","       [9.6440804e-01, 1.5914455e-02, 1.9677486e-02],\n","       [9.5620877e-01, 1.9439084e-02, 2.4352146e-02],\n","       [3.2612865e-03, 5.3271864e-02, 9.4346684e-01],\n","       [9.4292134e-01, 2.7359281e-02, 2.9719470e-02],\n","       [1.5910792e-01, 6.1680776e-01, 2.2408423e-01],\n","       [8.6244777e-02, 4.6919668e-01, 4.4455853e-01],\n","       [1.3253745e-01, 3.5971102e-01, 5.0775152e-01],\n","       [9.8250270e-01, 6.2969821e-03, 1.1200241e-02],\n","       [4.9249265e-02, 3.9483765e-01, 5.5591303e-01],\n","       [1.0461174e-01, 5.3187108e-01, 3.6351719e-01],\n","       [7.8555453e-04, 1.6339980e-02, 9.8287451e-01],\n","       [9.3293685e-01, 3.2335043e-02, 3.4728121e-02],\n","       [1.7261253e-01, 6.1395866e-01, 2.1342887e-01],\n","       [4.3737579e-02, 3.9514312e-01, 5.6111932e-01],\n","       [9.4305933e-01, 2.7002564e-02, 2.9938074e-02],\n","       [9.2602104e-01, 3.6439721e-02, 3.7539206e-02],\n","       [1.3064556e-01, 6.5611410e-01, 2.1324034e-01],\n","       [9.3171442e-01, 3.2823600e-02, 3.5462048e-02],\n","       [1.6708517e-01, 6.3058263e-01, 2.0233224e-01],\n","       [9.3593305e-01, 2.9923489e-02, 3.4143493e-02],\n","       [3.8415159e-03, 5.9502944e-02, 9.3665552e-01],\n","       [9.2878747e-01, 3.4426481e-02, 3.6786001e-02],\n","       [1.4616450e-02, 1.4416300e-01, 8.4122062e-01],\n","       [3.3279214e-02, 3.2587990e-01, 6.4084083e-01],\n","       [6.9246821e-02, 4.4042522e-01, 4.9032795e-01],\n","       [9.4733489e-01, 2.4721105e-02, 2.7943997e-02],\n","       [8.2518422e-04, 2.3412231e-02, 9.7576255e-01],\n","       [5.2225284e-02, 3.2711959e-01, 6.2065512e-01],\n","       [9.4640434e-01, 2.4881139e-02, 2.8714562e-02],\n","       [6.7924812e-02, 4.9543867e-01, 4.3663651e-01],\n","       [1.6457523e-01, 4.7895858e-01, 3.5646620e-01]], dtype=float32)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vohsYRkyDis2","executionInfo":{"status":"ok","timestamp":1631761968791,"user_tz":-540,"elapsed":524,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"d132998c-58dc-4ece-e21c-1a574f88f764"},"source":["from keras.models import load_model\n","\n","model.save('model.h5')\n","load_model('model.h5')"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.engine.sequential.Sequential at 0x7fecf02e1a10>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"fTMbWFB3aft8"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RBMnoHjSpRKA"},"source":["# test2"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3PknJW8fpPUG","executionInfo":{"status":"ok","timestamp":1629011603459,"user_tz":-540,"elapsed":364,"user":{"displayName":"石田竜宇","photoUrl":"","userId":"14178947605871169828"}},"outputId":"2bd532a0-6c09-4d40-f8ad-baec96c23135"},"source":["# 1. データ読み込みと確認\n","import numpy as np\n","from sklearn import datasets\n","\n","iris = datasets.load_iris()\n","print(iris.data[:10])\n","print(iris.target[:10])\n","print(iris.data.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[5.1 3.5 1.4 0.2]\n"," [4.9 3.  1.4 0.2]\n"," [4.7 3.2 1.3 0.2]\n"," [4.6 3.1 1.5 0.2]\n"," [5.  3.6 1.4 0.2]\n"," [5.4 3.9 1.7 0.4]\n"," [4.6 3.4 1.4 0.3]\n"," [5.  3.4 1.5 0.2]\n"," [4.4 2.9 1.4 0.2]\n"," [4.9 3.1 1.5 0.1]]\n","[0 0 0 0 0 0 0 0 0 0]\n","(150, 4)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R62zbQZYpjjh","executionInfo":{"status":"ok","timestamp":1629012706420,"user_tz":-540,"elapsed":233,"user":{"displayName":"石田竜宇","photoUrl":"","userId":"14178947605871169828"}},"outputId":"340e26e7-0a92-4286-83eb-f452c6eb285f"},"source":["# 2. データの前処理\n","from sklearn import preprocessing\n","from keras.utils import np_utils\n","\n","scaler = preprocessing.StandardScaler()\n","scaler.fit(iris.data)\n","x = scaler.transform(iris.data)\n","print(x[:10])\n","\n","t = np_utils.to_categorical(iris.target)\n","print(t[:10])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[-0.90068117  1.01900435 -1.34022653 -1.3154443 ]\n"," [-1.14301691 -0.13197948 -1.34022653 -1.3154443 ]\n"," [-1.38535265  0.32841405 -1.39706395 -1.3154443 ]\n"," [-1.50652052  0.09821729 -1.2833891  -1.3154443 ]\n"," [-1.02184904  1.24920112 -1.34022653 -1.3154443 ]\n"," [-0.53717756  1.93979142 -1.16971425 -1.05217993]\n"," [-1.50652052  0.78880759 -1.34022653 -1.18381211]\n"," [-1.02184904  0.78880759 -1.2833891  -1.3154443 ]\n"," [-1.74885626 -0.36217625 -1.34022653 -1.3154443 ]\n"," [-1.14301691  0.09821729 -1.2833891  -1.44707648]]\n","[[1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]\n"," [1. 0. 0.]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ewYVfEGIsDPA"},"source":["# 3. 訓練と検証用データの作成\n","from sklearn.model_selection import train_test_split\n","\n","x_train, x_test, t_train, t_test = train_test_split(x, t, train_size=0.75)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zrs2c8m9rVsx","executionInfo":{"status":"ok","timestamp":1629012726488,"user_tz":-540,"elapsed":237,"user":{"displayName":"石田竜宇","photoUrl":"","userId":"14178947605871169828"}},"outputId":"10ba4807-4884-437f-f6eb-90ed57a0a707"},"source":["# 4. モデルの作成\n","from keras.models import Sequential\n","from keras.layers import Dense, Activation\n","\n","model = Sequential()\n","model.add(Dense(32, input_dim=4))\n","model.add(Activation(\"relu\"))\n","model.add(Dense(32))\n","model.add(Activation(\"relu\"))\n","model.add(Dense(3))\n","model.add(Activation(\"softmax\"))\n","model.compile(optimizer=\"sgd\", loss=\"categorical_crossentropy\", metrics=\"accuracy\")\n","\n","print(model.summary())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"sequential_6\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense_12 (Dense)             (None, 32)                160       \n","_________________________________________________________________\n","activation_9 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dense_13 (Dense)             (None, 32)                1056      \n","_________________________________________________________________\n","activation_10 (Activation)   (None, 32)                0         \n","_________________________________________________________________\n","dense_14 (Dense)             (None, 3)                 99        \n","_________________________________________________________________\n","activation_11 (Activation)   (None, 3)                 0         \n","=================================================================\n","Total params: 1,315\n","Trainable params: 1,315\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1tvHFnjRuCf6","executionInfo":{"status":"ok","timestamp":1629012765253,"user_tz":-540,"elapsed":15165,"user":{"displayName":"石田竜宇","photoUrl":"","userId":"14178947605871169828"}},"outputId":"b456f7ec-3916-4714-c712-d6109df922ea"},"source":["# 5. 学習\n","history = model.fit(x_train, t_train, epochs=30, batch_size=8)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/30\n","14/14 [==============================] - 14s 2ms/step - loss: 0.9700 - accuracy: 0.5433\n","Epoch 2/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.8872 - accuracy: 0.6710\n","Epoch 3/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.8277 - accuracy: 0.6996\n","Epoch 4/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.7267 - accuracy: 0.7507\n","Epoch 5/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.7343 - accuracy: 0.7062\n","Epoch 6/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.6640 - accuracy: 0.7413\n","Epoch 7/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.6129 - accuracy: 0.7671\n","Epoch 8/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.5562 - accuracy: 0.8457\n","Epoch 9/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.6018 - accuracy: 0.7806\n","Epoch 10/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.5512 - accuracy: 0.8256\n","Epoch 11/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.5633 - accuracy: 0.7631\n","Epoch 12/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.5552 - accuracy: 0.7740\n","Epoch 13/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.4926 - accuracy: 0.7919\n","Epoch 14/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.4803 - accuracy: 0.8226\n","Epoch 15/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.4736 - accuracy: 0.8218\n","Epoch 16/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.4664 - accuracy: 0.8040\n","Epoch 17/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.4335 - accuracy: 0.8013\n","Epoch 18/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.4480 - accuracy: 0.8049\n","Epoch 19/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.4250 - accuracy: 0.8119\n","Epoch 20/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.4064 - accuracy: 0.8452\n","Epoch 21/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3690 - accuracy: 0.8959\n","Epoch 22/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3684 - accuracy: 0.8508\n","Epoch 23/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3548 - accuracy: 0.8357\n","Epoch 24/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3737 - accuracy: 0.8064\n","Epoch 25/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3821 - accuracy: 0.7995\n","Epoch 26/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3401 - accuracy: 0.8561\n","Epoch 27/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3770 - accuracy: 0.8227\n","Epoch 28/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3672 - accuracy: 0.8123\n","Epoch 29/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3178 - accuracy: 0.8655\n","Epoch 30/30\n","14/14 [==============================] - 0s 2ms/step - loss: 0.3466 - accuracy: 0.8214\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"Xmak2MfXuChf","executionInfo":{"status":"ok","timestamp":1629013100189,"user_tz":-540,"elapsed":266,"user":{"displayName":"石田竜宇","photoUrl":"","userId":"14178947605871169828"}},"outputId":"68ab2143-281d-45c9-80bc-7d96ace310b3"},"source":["# 6. 学習ログ確認\n","import matplotlib.pyplot as plt\n","\n","hist_loss = history.history[\"loss\"]\n","hist_acc = history.history[\"accuracy\"]\n","\n","\n","plt.plot(np.arange(len(hist_loss)), hist_loss, label='loss')\n","plt.plot(np.arange(len(hist_acc)), hist_acc, label='acc')\n","plt.legend()\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jVLcb6w1v3l3","executionInfo":{"status":"ok","timestamp":1629013333971,"user_tz":-540,"elapsed":331,"user":{"displayName":"石田竜宇","photoUrl":"","userId":"14178947605871169828"}},"outputId":"3fd59e4c-93e5-4abc-d6ae-e3c33a929218"},"source":["# 7. 検証データにて確認\n","loss, accuracy = model.evaluate(x_test, t_test)\n","print(loss, accuracy)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["2/2 [==============================] - 0s 6ms/step - loss: 0.3193 - accuracy: 0.9211\n","0.3192982077598572 0.9210526347160339\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"sYFg8rsH4MWZ"},"source":["# in the case of Adams"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wGnET0-mwC3S","executionInfo":{"status":"ok","timestamp":1631761978371,"user_tz":-540,"elapsed":193,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"9ab4643b-39f9-4676-8333-4379db2a7723"},"source":["model2 = Sequential()\n","model2.add(Dense(32, input_dim=4))\n","model2.add(Activation(\"relu\"))\n","model2.add(Dense(32))\n","model2.add(Activation(\"relu\"))\n","model2.add(Dense(3))\n","model2.add(Activation(\"softmax\"))\n","model2.compile(optimizer=\"adam\", loss=\"categorical_crossentropy\", metrics=[\"accuracy\"])\n","\n","print(model2.summary())"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense_3 (Dense)              (None, 32)                160       \n","_________________________________________________________________\n","activation_3 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 32)                1056      \n","_________________________________________________________________\n","activation_4 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dense_5 (Dense)              (None, 3)                 99        \n","_________________________________________________________________\n","activation_5 (Activation)    (None, 3)                 0         \n","=================================================================\n","Total params: 1,315\n","Trainable params: 1,315\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1whh9Oj94AZE","executionInfo":{"status":"ok","timestamp":1631761982005,"user_tz":-540,"elapsed":2085,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"d7f6a2bc-1a71-461a-9bf7-99e1f2662852"},"source":["history2 = model2.fit(x_train, t_train, epochs=30, batch_size=8)"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","14/14 [==============================] - 1s 3ms/step - loss: 0.9849 - accuracy: 0.5357\n","Epoch 2/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.8269 - accuracy: 0.5714\n","Epoch 3/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.7064 - accuracy: 0.7768\n","Epoch 4/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.6134 - accuracy: 0.7768\n","Epoch 5/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.5416 - accuracy: 0.7768\n","Epoch 6/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.4790 - accuracy: 0.8036\n","Epoch 7/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.4314 - accuracy: 0.8125\n","Epoch 8/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3918 - accuracy: 0.8393\n","Epoch 9/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3620 - accuracy: 0.8571\n","Epoch 10/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3420 - accuracy: 0.8661\n","Epoch 11/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.3146 - accuracy: 0.8839\n","Epoch 12/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.2953 - accuracy: 0.8929\n","Epoch 13/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.2762 - accuracy: 0.8929\n","Epoch 14/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.2609 - accuracy: 0.8839\n","Epoch 15/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.2450 - accuracy: 0.8839\n","Epoch 16/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.2299 - accuracy: 0.9018\n","Epoch 17/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.2181 - accuracy: 0.9107\n","Epoch 18/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.2050 - accuracy: 0.9286\n","Epoch 19/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1931 - accuracy: 0.9286\n","Epoch 20/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1822 - accuracy: 0.9286\n","Epoch 21/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1724 - accuracy: 0.9375\n","Epoch 22/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1622 - accuracy: 0.9464\n","Epoch 23/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1568 - accuracy: 0.9554\n","Epoch 24/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1448 - accuracy: 0.9554\n","Epoch 25/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1361 - accuracy: 0.9643\n","Epoch 26/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1305 - accuracy: 0.9643\n","Epoch 27/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1222 - accuracy: 0.9732\n","Epoch 28/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1155 - accuracy: 0.9732\n","Epoch 29/30\n","14/14 [==============================] - 0s 4ms/step - loss: 0.1106 - accuracy: 0.9732\n","Epoch 30/30\n","14/14 [==============================] - 0s 3ms/step - loss: 0.1040 - accuracy: 0.9821\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"-egv3XBW4TCv","executionInfo":{"status":"ok","timestamp":1631761987079,"user_tz":-540,"elapsed":596,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"2eba9c75-a16c-4d5e-e1a8-7ad03b4b8f5c"},"source":["hist_loss2 = history2.history[\"loss\"]\n","hist_acc2 = history2.history[\"accuracy\"]\n","\n","\n","plt.plot(np.arange(len(hist_loss)), hist_loss, label='loss')\n","plt.plot(np.arange(len(hist_acc)), hist_acc, label='acc')\n","plt.plot(np.arange(len(hist_loss2)), hist_loss2, label='loss_Adam')\n","plt.plot(np.arange(len(hist_acc2)), hist_acc2, label='acc_Adam')\n","plt.legend()\n","plt.show()"],"execution_count":15,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"FAmgEAnqeU11"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p4vLlM_dZzin","executionInfo":{"status":"ok","timestamp":1631762073668,"user_tz":-540,"elapsed":19423,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"f955f76d-c35d-497a-f60c-cf62bed9c26f"},"source":["from google.colab import drive\n","drive.mount(\"/content/drive\")"],"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"id":"2Ct80O14mYbz","executionInfo":{"status":"ok","timestamp":1631762091319,"user_tz":-540,"elapsed":190,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"o19zUGLWZzlK","executionInfo":{"status":"ok","timestamp":1631762093570,"user_tz":-540,"elapsed":509,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}}},"source":["test = pd.read_csv(\"/content/drive/My Drive/04_Google Colaboratory/210916_アヤメの分類/test.tsv\", sep=\"\\t\") \n","sample_submit = pd.read_csv(\"/content/drive/My Drive/04_Google Colaboratory/210916_アヤメの分類/sample_submit.csv\", header=None) "],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"pJSblMFcmVef","executionInfo":{"status":"ok","timestamp":1631762153104,"user_tz":-540,"elapsed":188,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}}},"source":["testX = test.iloc[:, 1:5]\n","\n","pred = model2.predict(testX)"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"L2O-v2pifYwe","executionInfo":{"status":"ok","timestamp":1631762191835,"user_tz":-540,"elapsed":197,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}}},"source":["pred_cat = np.argmax(pred, axis=1)\n","pred_cat =pd.DataFrame(pred_cat)\n","pred_cat = pred_cat.replace([0, 1, 2], [\"Iris-virginica\", \"Iris-setosa\", \"Iris-versicolor\"])"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"VIDkJgOygmiQ","executionInfo":{"status":"ok","timestamp":1631762193155,"user_tz":-540,"elapsed":193,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}},"outputId":"e4d2e85a-e779-4e54-e069-5c7c325056df"},"source":["sample_submit[1] = pred_cat\n","sample_submit.head()"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>Iris-versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7</td>\n","      <td>Iris-versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>Iris-versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10</td>\n","      <td>Iris-versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    0                1\n","0   2  Iris-versicolor\n","1   7  Iris-versicolor\n","2   8  Iris-versicolor\n","3  10  Iris-versicolor\n","4  13      Iris-setosa"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"QIlAS-i0guNR","executionInfo":{"status":"ok","timestamp":1631762204564,"user_tz":-540,"elapsed":190,"user":{"displayName":"石田竜宇","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjhqXUEiNSE0yITyTFJFTHyPb-5fWiru5h_b8axjgQ=s64","userId":"14178947605871169828"}}},"source":["sample_submit.to_csv(\"submit03.csv\", index=None, header=None)"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"id":"TMqiBInEm0VL"},"source":[""],"execution_count":null,"outputs":[]}]}